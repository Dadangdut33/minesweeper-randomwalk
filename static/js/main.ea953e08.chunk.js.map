{"version":3,"sources":["App.js","registerServiceWorker.js","index.js"],"names":["convertToNumber","map","i","j","dimensions","count","row","column","e","isNumeric","str","isNaN","parseFloat","App","props","state","debug","maxTunnels","maxLength","revealed","reset","currMap","win","lost","showWin","bombCounter","totalMoves","timer","timerStr","playing","timerStarted","onChange","bind","checkTiles","mapCheat","checkWin","hideSHowWin","startTimer","formatTime","changePreset","generateNew","num","array","push","target","name","value","this","setState","validator","setInterval","clearInterval","getSeconds","slice","minutes","Math","floor","getMinutes","getHours","x","input","Number","alert","console","log","repeat","randomDirection","createArray","currentRow","random","currentColumn","directions","lastDirection","length","randomLength","ceil","tunnelLength","lose","rowId","colId","parseInt","up","document","getElementById","outerUp","upperLeft","outerUpperLeft","upperRight","outerUpperRight","down","outerDown","lowerLeft","outerLowerLeft","lowerRight","outerLowerRight","left","outerLeft","right","outerRight","innerHTML","className","style","backgroundColor","col","checkForNum","revealSurroundings","tile","innerTile","border","createMap","resetTiles","chosen","allSafeRevealed","window","confirm","getAttribute","revealAll","id","outer","split","currentMove","forceUpdate","grid","iframes","getElementsByTagName","remove","type","min","max","onClick","obj","obj2","open","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ea953e08.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\n// convert the map to a minesweeper map\r\nfunction convertToNumber(map, i, j, dimensions) {\r\n\tvar count = 0;\r\n\tvar row = dimensions;\r\n\tvar column = dimensions;\r\n\ttry {\r\n\t\tif (i > 0) {\r\n\t\t\tif (j > 0) {\r\n\t\t\t\tif (map[i - 1][j - 1] === \"💣\") count += 1;\r\n\t\t\t}\r\n\t\t\tif (map[i - 1][j] === \"💣\") {\r\n\t\t\t\tcount += 1;\r\n\t\t\t}\r\n\t\t\tif (j < column - 1) {\r\n\t\t\t\tif (map[i - 1][j + 1] === \"💣\") count += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (j > 0) {\r\n\t\t\tif (map[i][j - 1] === \"💣\") count += 1;\r\n\t\t}\r\n\r\n\t\tif (j < column - 1) {\r\n\t\t\tif (map[i][j + 1] === \"💣\") count += 1;\r\n\t\t}\r\n\r\n\t\tif (i < row - 1) {\r\n\t\t\tif (j > 0) {\r\n\t\t\t\tif (map[i + 1][j - 1] === \"💣\") count += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (map[i + 1][j] === \"💣\") {\r\n\t\t\tcount += 1;\r\n\t\t}\r\n\r\n\t\tif (j < column - 1) {\r\n\t\t\tif (map[i + 1][j + 1] === \"💣\") count += 1;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\t/* ignored */\r\n\t\t// console.log(e);\r\n\t} finally {\r\n\t\treturn count;\r\n\t}\r\n}\r\n\r\nfunction isNumeric(str) {\r\n\tif (typeof str != \"string\") return false; // we only process strings!\r\n\treturn (\r\n\t\t!isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\r\n\t\t!isNaN(parseFloat(str))\r\n\t); // ...and ensure strings of whitespace fail\r\n}\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdebug: false,\r\n\t\t\tdimensions: 9,\r\n\t\t\tmaxTunnels: 7,\r\n\t\t\tmaxLength: 13,\r\n\t\t\trevealed: false,\r\n\t\t\treset: true,\r\n\t\t\tcurrMap: [],\r\n\t\t\twin: false,\r\n\t\t\tlost: false,\r\n\t\t\tshowWin: false,\r\n\t\t\tbombCounter: 0,\r\n\t\t\ttotalMoves: 0,\r\n\t\t\ttimer: 0,\r\n\t\t\ttimerStr: \"00 : 00 : 00\",\r\n\t\t\tplaying: false,\r\n\t\t\ttimerStarted: false,\r\n\t\t};\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.checkTiles = this.checkTiles.bind(this);\r\n\t\tthis.mapCheat = this.mapCheat.bind(this);\r\n\t\tthis.checkWin = this.checkWin.bind(this);\r\n\t\tthis.hideSHowWin = this.hideSHowWin.bind(this);\r\n\t\tthis.startTimer = this.startTimer.bind(this);\r\n\t\tthis.formatTime = this.formatTime.bind(this);\r\n\t\tthis.changePreset = this.changePreset.bind(this);\r\n\t\tthis.generateNew = this.generateNew.bind(this);\r\n\t}\r\n\r\n\t// create array with number provided\r\n\tcreateArray(num, dimensions) {\r\n\t\tvar array = [];\r\n\t\tfor (var i = 0; i < dimensions; i++) {\r\n\t\t\tarray.push([]);\r\n\t\t\tfor (var j = 0; j < dimensions; j++) {\r\n\t\t\t\tarray[i].push(num);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn array;\r\n\t}\r\n\r\n\t// onchange for number inputs\r\n\tonChange(e) {\r\n\t\tif (e.target.name !== \"dimensions\") {\r\n\t\t\tif (e.target.value > 0 && e.target.value <= 1000) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t[e.target.name]: this.validator(e.target.value),\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tif (e.target.value < 1) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t[e.target.name]: 1,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t[e.target.name]: 1000,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (e.target.value > 2 && e.target.value <= 100) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t[e.target.name]: this.validator(e.target.value),\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tif (e.target.value < 3) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t[e.target.name]: 3,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t[e.target.name]: 100,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// timer\r\n\tstartTimer() {\r\n\t\tvar timer = setInterval(() => {\r\n\t\t\tif (!this.state.timerStarted) {\r\n\t\t\t\tclearInterval(timer);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.setState({\r\n\t\t\t\ttimer: this.state.timer + 1,\r\n\t\t\t});\r\n\r\n\t\t\tthis.formatTime();\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\t// format for timer\r\n\tformatTime() {\r\n\t\tconst getSeconds = `0${this.state.timer % 60}`.slice(-2);\r\n\t\tconst minutes = `${Math.floor(this.state.timer / 60)}`;\r\n\t\tconst getMinutes = `0${minutes % 60}`.slice(-2);\r\n\t\tconst getHours = `0${Math.floor(this.state.timer / 3600)}`.slice(-2);\r\n\r\n\t\tthis.setState({\r\n\t\t\ttimerStr: `${getHours} : ${getMinutes} : ${getSeconds}`,\r\n\t\t});\r\n\t}\r\n\r\n\t// validator for number inputs\r\n\tvalidator(x) {\r\n\t\tlet input = Number(x);\r\n\t\tif (isNaN(input)) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn input;\r\n\t}\r\n\r\n\t// print the map to console\r\n\tmapCheat(e) {\r\n\t\talert(\"Map printed to console\");\r\n\t\tconsole.log(\"=\".repeat(25));\r\n\t\tconsole.log(\"Revealing the map...\");\r\n\t\tconsole.log(\"=\".repeat(25));\r\n\t\tconsole.log(this.state.currMap);\r\n\t}\r\n\r\n\t// create a randomly generated map\r\n\tcreateMap() {\r\n\t\tlet dimensions = this.state.dimensions, // width and height of the map\r\n\t\t\tmaxTunnels = this.state.maxTunnels, // max number of tunnels possible\r\n\t\t\tmaxLength = this.state.maxLength, // max length each tunnel can have\r\n\t\t\tmap = this.createArray(1, dimensions), // create a 2d array full of 1's\r\n\t\t\tcurrentRow = Math.floor(Math.random() * dimensions), // the current row - start at a random spot\r\n\t\t\tcurrentColumn = Math.floor(Math.random() * dimensions), // the current column - start at a random spot\r\n\t\t\tdirections = [\r\n\t\t\t\t[-1, 0], // left\r\n\t\t\t\t[1, 0], // right\r\n\t\t\t\t[0, -1], // up\r\n\t\t\t\t[0, 1], // down\r\n\t\t\t], // array to get a random direction from (left,right,up,down)\r\n\t\t\tlastDirection = [], // save the last direction it went\r\n\t\t\trandomDirection; // next turn/direction - holds a value from directions\r\n\r\n\t\t// if reset/create new map\r\n\t\tif (this.state.reset) {\r\n\t\t\t// DEBUG\r\n\t\t\tif (this.state.debug) {\r\n\t\t\t\tconsole.log(\"=\".repeat(25));\r\n\t\t\t\tconsole.log(\"CREATING A NEW MAP...\");\r\n\t\t\t\tconsole.log(\"Starting row: \" + currentRow);\r\n\t\t\t\tconsole.log(\"Starting column: \" + currentColumn);\r\n\t\t\t}\r\n\r\n\t\t\t// lets create some tunnels - while maxTunnels, dimentions, and maxLength  is greater than 0.\r\n\t\t\twhile (maxTunnels && dimensions && maxLength) {\r\n\t\t\t\t// lets get a random direction - until it is a perpendicular to the lastDirection\r\n\t\t\t\t// if the last direction = left or right,\r\n\t\t\t\t// then the new direction has to be up or down,\r\n\t\t\t\t// and vice versa\r\n\t\t\t\tdo {\r\n\t\t\t\t\trandomDirection = directions[Math.floor(Math.random() * directions.length)];\r\n\t\t\t\t} while ((randomDirection[0] === -lastDirection[0] && randomDirection[1] === -lastDirection[1]) || (randomDirection[0] === lastDirection[0] && randomDirection[1] === lastDirection[1]));\r\n\r\n\t\t\t\tvar randomLength = Math.ceil(Math.random() * maxLength), //length the next tunnel will be (max of maxLength)\r\n\t\t\t\t\ttunnelLength = 0; //current length of tunnel being created\r\n\r\n\t\t\t\t// lets loop until tunnel is long enough or until it hit an edge\r\n\t\t\t\twhile (tunnelLength < randomLength) {\r\n\t\t\t\t\t//break the loop if it is going out of the map\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(currentRow === 0 && randomDirection[0] === -1) ||\r\n\t\t\t\t\t\t(currentColumn === 0 && randomDirection[1] === -1) ||\r\n\t\t\t\t\t\t(currentRow === dimensions - 1 && randomDirection[0] === 1) ||\r\n\t\t\t\t\t\t(currentColumn === dimensions - 1 && randomDirection[1] === 1)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// DEBUG\r\n\t\t\t\t\t\tif (this.state.debug) {\r\n\t\t\t\t\t\t\tconsole.log(\"=\".repeat(25));\r\n\t\t\t\t\t\t\tconsole.log(\"Current row: \" + currentRow);\r\n\t\t\t\t\t\t\tconsole.log(\"Current column: \" + currentColumn);\r\n\t\t\t\t\t\t\tconsole.log(\"Direction:\");\r\n\t\t\t\t\t\t\tconsole.log(randomDirection);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// randomize between tunnel or bomb\r\n\t\t\t\t\t\tif (Math.random() > 0.5) {\r\n\t\t\t\t\t\t\tmap[currentRow][currentColumn] = 0; // not bomb\r\n\r\n\t\t\t\t\t\t\t// DEBUG\r\n\t\t\t\t\t\t\tif (this.state.debug) console.log(\"Created empty space\");\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tmap[currentRow][currentColumn] = 2; // bomb\r\n\r\n\t\t\t\t\t\t\t// DEBUG\r\n\t\t\t\t\t\t\tif (this.state.debug) console.log(\"Created Bomb\");\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcurrentRow += randomDirection[0]; //add the value from randomDirection to row and col (-1, 0, or 1) to update the location\r\n\t\t\t\t\t\tcurrentColumn += randomDirection[1];\r\n\t\t\t\t\t\ttunnelLength++; //the tunnel is now one longer, so lets increment that variable\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (tunnelLength) {\r\n\t\t\t\t\t// update the variables unless the last loop broke beforeit made any part of a tunnel\r\n\t\t\t\t\tlastDirection = randomDirection; //set lastDirection, so it can remember what way it went\r\n\t\t\t\t\tmaxTunnels--; // we created a whole tunnel so lets decrement how many we have left to create\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar bombCounter = 0; //counter for the number of bombs\r\n\t\t\t// based on the walls and tunnel, create a minesweeper map\r\n\t\t\tfor (var i = 0; i < dimensions; i++) {\r\n\t\t\t\tfor (var j = 0; j < dimensions; j++) {\r\n\t\t\t\t\tif (map[i][j] === 2) {\r\n\t\t\t\t\t\tmap[i][j] = \"💣\";\r\n\t\t\t\t\t\tbombCounter++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmap[i][j] = \"#\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// check surrounding tiles for mines, convert to numbers. 💣 is a mine\r\n\t\t\tfor (i = 0; i < dimensions; i++) {\r\n\t\t\t\tfor (j = 0; j < dimensions; j++) {\r\n\t\t\t\t\tif (map[i][j] !== \"💣\") {\r\n\t\t\t\t\t\tmap[i][j] = convertToNumber(map, i, j, dimensions);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.state.debug) {\r\n\t\t\t\tconsole.log(\"=\".repeat(25));\r\n\t\t\t\tconsole.log(\"MAP:\");\r\n\t\t\t\tconsole.log(map);\r\n\t\t\t\tconsole.log(\"=\".repeat(25));\r\n\t\t\t\tconsole.log(\"BOMBS: \" + bombCounter);\r\n\t\t\t\tconsole.log(\"=\".repeat(25));\r\n\t\t\t}\r\n\r\n\t\t\t// if reset/on start\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrMap: map,\r\n\t\t\t\treset: false,\r\n\t\t\t\twin: false,\r\n\t\t\t\tlose: false,\r\n\t\t\t\tshowWin: false,\r\n\t\t\t\tbombCounter: bombCounter,\r\n\t\t\t\ttotalMoves: 0,\r\n\t\t\t\ttimer: 0,\r\n\t\t\t\ttimerStr: \"00 : 00 : 00\",\r\n\t\t\t\tplaying: false,\r\n\t\t\t\ttimerStarted: false,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// if not reset\r\n\t\t\tmap = this.state.currMap;\r\n\t\t}\r\n\r\n\t\treturn map; // all the tunnels have been created and the map is complete, so lets return it to render()\r\n\t}\r\n\r\n\tcheckForNum(rowId, colId) {\r\n\t\trowId = parseInt(rowId);\r\n\t\tcolId = parseInt(colId);\r\n\r\n\t\t// reveal cell if number and is not already revealed\r\n\t\tvar up = document.getElementById(\"inner-\" + (rowId - 1) + \"-\" + colId);\r\n\t\tvar outerUp = document.getElementById(rowId - 1 + \"-\" + colId);\r\n\t\tvar upperLeft = document.getElementById(\"inner-\" + (rowId - 1) + \"-\" + (colId - 1));\r\n\t\tvar outerUpperLeft = document.getElementById(rowId - 1 + \"-\" + (colId - 1));\r\n\t\tvar upperRight = document.getElementById(\"inner-\" + (rowId - 1) + \"-\" + (colId + 1));\r\n\t\tvar outerUpperRight = document.getElementById(rowId - 1 + \"-\" + (colId + 1));\r\n\t\tvar down = document.getElementById(\"inner-\" + (rowId + 1) + \"-\" + colId);\r\n\t\tvar outerDown = document.getElementById(rowId + 1 + \"-\" + colId);\r\n\t\tvar lowerLeft = document.getElementById(\"inner-\" + (rowId + 1) + \"-\" + (colId - 1));\r\n\t\tvar outerLowerLeft = document.getElementById(rowId + 1 + \"-\" + (colId - 1));\r\n\t\tvar lowerRight = document.getElementById(\"inner-\" + (rowId + 1) + \"-\" + (colId + 1));\r\n\t\tvar outerLowerRight = document.getElementById(rowId + 1 + \"-\" + (colId + 1));\r\n\t\tvar left = document.getElementById(\"inner-\" + rowId + \"-\" + (colId - 1));\r\n\t\tvar outerLeft = document.getElementById(rowId + \"-\" + (colId - 1));\r\n\t\tvar right = document.getElementById(\"inner-\" + rowId + \"-\" + (colId + 1));\r\n\t\tvar outerRight = document.getElementById(rowId + \"-\" + (colId + 1));\r\n\r\n\t\tif (up && isNumeric(up.innerHTML) && up.className !== \"revealed\") {\r\n\t\t\tup.className = \"revealed\";\r\n\t\t\touterUp.style.backgroundColor = \"white\";\r\n\t\t}\r\n\t\tif (upperLeft && isNumeric(upperLeft.innerHTML) && upperLeft.className !== \"revealed\") {\r\n\t\t\tupperLeft.className = \"revealed\";\r\n\t\t\touterUpperLeft.style.backgroundColor = \"white\";\r\n\t\t}\r\n\t\tif (upperRight && isNumeric(upperRight.innerHTML) && upperRight.className !== \"revealed\") {\r\n\t\t\tupperRight.className = \"revealed\";\r\n\t\t\touterUpperRight.style.backgroundColor = \"white\";\r\n\t\t}\r\n\t\tif (down && isNumeric(down.innerHTML) && down.className !== \"revealed\") {\r\n\t\t\tdown.className = \"revealed\";\r\n\t\t\touterDown.style.backgroundColor = \"white\";\r\n\t\t}\r\n\t\tif (lowerLeft && isNumeric(lowerLeft.innerHTML) && lowerLeft.className !== \"revealed\") {\r\n\t\t\tlowerLeft.className = \"revealed\";\r\n\t\t\touterLowerLeft.style.backgroundColor = \"white\";\r\n\t\t}\r\n\t\tif (lowerRight && isNumeric(lowerRight.innerHTML) && lowerRight.className !== \"revealed\") {\r\n\t\t\tlowerRight.className = \"revealed\";\r\n\t\t\touterLowerRight.style.backgroundColor = \"white\";\r\n\t\t}\r\n\t\tif (left && isNumeric(left.innerHTML) && left.className !== \"revealed\") {\r\n\t\t\tleft.className = \"revealed\";\r\n\t\t\touterLeft.style.backgroundColor = \"white\";\r\n\t\t}\r\n\t\tif (right && isNumeric(right.innerHTML) && right.className !== \"revealed\") {\r\n\t\t\tright.className = \"revealed\";\r\n\t\t\touterRight.style.backgroundColor = \"white\";\r\n\t\t}\r\n\t}\r\n\r\n\t// Reveal surrounding tiles\r\n\trevealSurroundings(map, row, col) {\r\n\t\t// parse to int because sometimes it comes in as a string\r\n\t\trow = parseInt(row);\r\n\t\tcol = parseInt(col);\r\n\r\n\t\t// check above\r\n\t\tvar up = document.getElementById(\"inner-\" + (row - 1) + \"-\" + col);\r\n\t\tvar outerUp = document.getElementById(row - 1 + \"-\" + col);\r\n\t\tif (up && up.innerHTML !== \"💣\") {\r\n\t\t\t// if empty, reveal their surrounding\r\n\t\t\tif (up.innerHTML === \"\" && up.className !== \"revealed\") {\r\n\t\t\t\tup.className = \"revealed\";\r\n\t\t\t\t// check already revealed or not\r\n\t\t\t\tif (outerUp.style.backgroundColor !== \"white\") {\r\n\t\t\t\t\t// outerUp.style.border = \"none\";\r\n\t\t\t\t\touterUp.style.backgroundColor = \"white\";\r\n\r\n\t\t\t\t\t// if empty then check for numbers and reveal them, also check for another empty tiles\r\n\t\t\t\t\tthis.checkForNum(row - 1, col);\r\n\t\t\t\t\tthis.revealSurroundings(map, row - 1, col);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// check below\r\n\t\tvar down = document.getElementById(\"inner-\" + (row + 1) + \"-\" + col);\r\n\t\tvar outerDown = document.getElementById(row + 1 + \"-\" + col);\r\n\t\tif (down && down.innerHTML !== \"💣\") {\r\n\t\t\t// if empty, reveal their surrounding\r\n\t\t\tif (down.innerHTML === \"\" && down.className !== \"revealed\") {\r\n\t\t\t\tdown.className = \"revealed\";\r\n\t\t\t\t// check already revealed or not\r\n\t\t\t\tif (outerDown.style.backgroundColor !== \"white\") {\r\n\t\t\t\t\t// outerDown.style.border = \"none\";\r\n\t\t\t\t\touterDown.style.backgroundColor = \"white\";\r\n\r\n\t\t\t\t\t// if empty then check for numbers and reveal them, also check for another empty tiles\r\n\t\t\t\t\tthis.checkForNum(row + 1, col);\r\n\t\t\t\t\tthis.revealSurroundings(map, row + 1, col);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// check left\r\n\t\tvar left = document.getElementById(\"inner-\" + row + \"-\" + (col - 1));\r\n\t\tvar outerLeft = document.getElementById(row + \"-\" + (col - 1));\r\n\t\tif (left && left.innerHTML !== \"💣\") {\r\n\t\t\t// if empty, reveal their surrounding\r\n\t\t\tif (left.innerHTML === \"\" && left.className !== \"revealed\") {\r\n\t\t\t\tleft.className = \"revealed\";\r\n\t\t\t\t// check already revealed or not\r\n\t\t\t\tif (outerLeft.style.backgroundColor !== \"white\") {\r\n\t\t\t\t\t// outerLeft.style.border = \"none\";\r\n\t\t\t\t\touterLeft.style.backgroundColor = \"white\";\r\n\r\n\t\t\t\t\t// if empty then check for numbers and reveal them, also check for another empty tiles\r\n\t\t\t\t\tthis.checkForNum(row, col - 1);\r\n\t\t\t\t\tthis.revealSurroundings(map, row, col - 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// check right\r\n\t\tvar right = document.getElementById(\"inner-\" + row + \"-\" + (col + 1));\r\n\t\tvar outerRight = document.getElementById(row + \"-\" + (col + 1));\r\n\t\tif (right && right.innerHTML !== \"💣\") {\r\n\t\t\t// if empty, reveal their surrounding\r\n\t\t\tif (right.innerHTML === \"\" && right.className !== \"revealed\") {\r\n\t\t\t\tright.className = \"revealed\";\r\n\t\t\t\t// check already revealed or not\r\n\t\t\t\tif (outerRight.style.backgroundColor !== \"white\") {\r\n\t\t\t\t\t// outerRight.style.border = \"none\";\r\n\t\t\t\t\touterRight.style.backgroundColor = \"white\";\r\n\r\n\t\t\t\t\t// if empty then check for numbers and reveal them, also check for another empty tiles\r\n\t\t\t\t\tthis.checkForNum(row, col + 1);\r\n\t\t\t\t\tthis.revealSurroundings(map, row, col + 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trevealAll() {\r\n\t\t// loop through all the elements and for the empty one change the style border and background color\r\n\t\tfor (var i = 0; i < this.state.dimensions; i++) {\r\n\t\t\tfor (var j = 0; j < this.state.dimensions; j++) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar tile = document.getElementById(i + \"-\" + j);\r\n\t\t\t\t\tvar insideTheTile = document.getElementById(\"inner-\" + i + \"-\" + j);\r\n\r\n\t\t\t\t\tif (insideTheTile.innerHTML !== \"💣\") {\r\n\t\t\t\t\t\ttile.style.backgroundColor = \"white\";\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e) {}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tresetTiles() {\r\n\t\t// loop through all the elements and for the empty one change the style border and background color\r\n\t\tfor (var i = 0; i < this.state.dimensions; i++) {\r\n\t\t\tfor (var j = 0; j < this.state.dimensions; j++) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar tile = document.getElementById(i + \"-\" + j);\r\n\t\t\t\t\tvar innerTile = document.getElementById(\"inner-\" + i + \"-\" + j);\r\n\r\n\t\t\t\t\ttile.style.border = \"\";\r\n\t\t\t\t\ttile.style.backgroundColor = \"\";\r\n\r\n\t\t\t\t\tinnerTile.className = \"hidden\";\r\n\t\t\t\t} catch (e) {}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateNew() {\r\n\t\tthis.setState({\r\n\t\t\trevealed: false,\r\n\t\t\treset: true,\r\n\t\t\tmap: this.createMap(),\r\n\t\t\twin: false,\r\n\t\t\tlost: false,\r\n\t\t});\r\n\t\tthis.resetTiles();\r\n\t}\r\n\r\n\tchangePreset(e) {\r\n\t\tvar chosen = e.target.value;\r\n\t\tif (chosen === \"Easy\") {\r\n\t\t\tthis.setState({\r\n\t\t\t\tdimensions: 9,\r\n\t\t\t\tmaxTunnels: 7,\r\n\t\t\t\tmaxLength: 13,\r\n\t\t\t});\r\n\t\t} else if (chosen === \"Medium\") {\r\n\t\t\tthis.setState({\r\n\t\t\t\tdimensions: 16,\r\n\t\t\t\tmaxTunnels: 20,\r\n\t\t\t\tmaxLength: 60,\r\n\t\t\t});\r\n\t\t} else if (chosen === \"Hard\") {\r\n\t\t\tthis.setState({\r\n\t\t\t\tdimensions: 22,\r\n\t\t\t\tmaxTunnels: 45,\r\n\t\t\t\tmaxLength: 80,\r\n\t\t\t});\r\n\t\t} else if (chosen === \"Very Hard\") {\r\n\t\t\tthis.setState({\r\n\t\t\t\tdimensions: 28,\r\n\t\t\t\tmaxTunnels: 60,\r\n\t\t\t\tmaxLength: 110,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcheckWin() {\r\n\t\tvar allSafeRevealed = true;\r\n\t\tfor (var i = 0; i < this.state.dimensions; i++) {\r\n\t\t\tfor (var j = 0; j < this.state.dimensions; j++) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar innerTile = document.getElementById(\"inner-\" + i + \"-\" + j);\r\n\r\n\t\t\t\t\tif (innerTile.innerHTML !== \"💣\") {\r\n\t\t\t\t\t\tif (innerTile.className === \"hidden\") {\r\n\t\t\t\t\t\t\tallSafeRevealed = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t/* Ignored */\r\n\t\t\t\t\t// console.log(\"checkTiles\" + e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (allSafeRevealed) {\r\n\t\t\tthis.setState({\r\n\t\t\t\twin: true,\r\n\t\t\t\tshowWin: true,\r\n\t\t\t\trevealed: true,\r\n\t\t\t\ttimerStarted: false,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\twin: false,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\thideSHowWin() {\r\n\t\tthis.setState({\r\n\t\t\tshowWin: false,\r\n\t\t});\r\n\t}\r\n\r\n\tcheckTiles(e) {\r\n\t\t// check win or not\r\n\t\tif (this.state.win) {\r\n\t\t\tif (window.confirm(\"You have won the game! Would you like to reset?\")) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\trevealed: false,\r\n\t\t\t\t\tmap: this.createMap(),\r\n\t\t\t\t\treset: true,\r\n\t\t\t\t\twin: false,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.resetTiles();\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// check lost or not\r\n\t\tif (this.state.lost) {\r\n\t\t\tif (window.confirm(\"You have lost the game! Would you like to reset?\")) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\trevealed: false,\r\n\t\t\t\t\tmap: this.createMap(),\r\n\t\t\t\t\treset: true,\r\n\t\t\t\t\tlost: false,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.resetTiles();\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// if timer is not started then start the timer\r\n\t\tif (!this.state.timerStarted) {\r\n\t\t\tthis.setState({\r\n\t\t\t\ttimerStarted: true,\r\n\t\t\t});\r\n\t\t\tthis.startTimer();\r\n\t\t}\r\n\r\n\t\t// if not playing set playing\r\n\t\tif (!this.state.playing) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tplaying: true,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.state.win === false) {\r\n\t\t\t// onclick, check if mine or not. if mine tell user lost\r\n\t\t\tif (e.target.getAttribute(\"data-tiletype\") === \"mines\") {\r\n\t\t\t\talert(\"You step on a mine. You lost!\");\r\n\r\n\t\t\t\tthis.revealAll();\r\n\r\n\t\t\t\t// reveal the map\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\trevealed: true,\r\n\t\t\t\t\tlost: true,\r\n\t\t\t\t\ttimerStarted: false,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tvar innerTile = document.getElementById(\"inner-\" + e.target.id);\r\n\r\n\t\t\t\tif (innerTile !== null) {\r\n\t\t\t\t\tif (innerTile.className !== \"revealed\") {\r\n\t\t\t\t\t\tinnerTile.className = \"revealed\";\r\n\r\n\t\t\t\t\t\tvar outer = document.getElementById(e.target.id);\r\n\t\t\t\t\t\t// id is row-col, separate it\r\n\t\t\t\t\t\tvar row = e.target.id.split(\"-\")[0];\r\n\t\t\t\t\t\tvar col = e.target.id.split(\"-\")[1];\r\n\r\n\t\t\t\t\t\touter.style.backgroundColor = \"white\";\r\n\t\t\t\t\t\t// check empty content\r\n\t\t\t\t\t\tif (innerTile.innerHTML === \"\") {\r\n\t\t\t\t\t\t\t// outer.style.border = \"none\";\r\n\t\t\t\t\t\t\tthis.checkForNum(row, col);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// reveeal surroundings tiles!\r\n\t\t\t\t\t\tthis.revealSurroundings(this.state.currMap, row, col);\r\n\r\n\t\t\t\t\t\tvar currentMove = this.state.totalMoves;\r\n\t\t\t\t\t\tcurrentMove++;\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\ttotalMoves: currentMove,\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tthis.forceUpdate();\r\n\r\n\t\t\t\t\t\tthis.checkWin();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet grid = this.createMap();\r\n\r\n\t\t// remove all iframe, because for some reaso an iframe like to shows up sometimes.\r\n\t\tvar iframes = document.getElementsByTagName(\"iframe\");\r\n\t\tfor (var i = 0; i < iframes.length; i++) {\r\n\t\t\tiframes[i].remove();\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<div className='form-group row text-center'>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>dimensions</label>\r\n\t\t\t\t\t\t<input className='form-control' name='dimensions' type='number' min='1' max='1000' value={this.state.dimensions} onChange={this.onChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>maxTunnels</label>\r\n\t\t\t\t\t\t<input className='form-control' name='maxTunnels' type='number' min='1' max='1000' value={this.state.maxTunnels} onChange={this.onChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>maxLength</label>\r\n\t\t\t\t\t\t<input className='form-control' name='maxLength' type='number' min='1' max='1000' value={this.state.maxLength} onChange={this.onChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>Preset</label>\r\n\t\t\t\t\t\t<select className='form-control' name='preset' onChange={this.changePreset}>\r\n\t\t\t\t\t\t\t<option value='Easy'>Easy (9x9)</option>\r\n\t\t\t\t\t\t\t<option value='Medium'>Medium (16x16)</option>\r\n\t\t\t\t\t\t\t<option value='Hard'>Hard (22x22)</option>\r\n\t\t\t\t\t\t\t<option value='Very Hard'>Very Hard (28x28)</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>Generate</label>\r\n\t\t\t\t\t\t<input className='form-control' type='button' onClick={this.generateNew} value={\"Regenerate\"} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<table className='grid'>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t{grid.map((obj, row) => (\r\n\t\t\t\t\t\t\t<tr key={row}>\r\n\t\t\t\t\t\t\t\t{obj.map((obj2, col) => (\r\n\t\t\t\t\t\t\t\t\t<td className={this.state.revealed ? \"cell-reveal\" : \"cell-hidden\"} id={row + \"-\" + col} key={col} data-tiletype={obj2 === \"💣\" ? \"mines\" : \"notmines\"} onClick={this.checkTiles}>\r\n\t\t\t\t\t\t\t\t\t\t<span id={\"inner-\" + row + \"-\" + col} className={this.state.revealed ? \"revealed\" : \"hidden\"} data-tiletype={obj2 === \"💣\" ? \"mines\" : \"notmines\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t{obj2 === \"💣\" ? \"💣\" : obj2 === 0 ? \"\" : obj2}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t</table>\r\n\t\t\t\t<div className='form-group row text-center'>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>Status</label>\r\n\t\t\t\t\t\t<input className='form-control default-cursor' type='button' value={this.state.playing ? (this.state.lost ? \"Lost\" : this.state.win ? \"Win\" : \"Playing\") : \"-\"} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>Bomb</label>\r\n\t\t\t\t\t\t<input className='form-control default-cursor' type='button' value={this.state.bombCounter} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>Moves</label>\r\n\t\t\t\t\t\t<input className='form-control default-cursor' type='button' value={this.state.totalMoves} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>Time</label>\r\n\t\t\t\t\t\t<input className='form-control default-cursor' type='button' value={this.state.timerStr} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>Cheat</label>\r\n\t\t\t\t\t\t<input className='form-control' name='cheat' type='button' onClick={this.mapCheat} value={\"Show\"} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>Sourcecode</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\tname='sourcecode'\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\twindow.open(\"https://github.com/Dadangdut33/minesweeper-randomwalk\", \"_blank\");\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvalue={\"Github\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={this.state.showWin ? \"block\" : \"hidden\"} id='win-popup'>\r\n\t\t\t\t\t<div className='popup'>\r\n\t\t\t\t\t\t<div className='popup-content'>\r\n\t\t\t\t\t\t\t<h2>Congratulations! You Won the game!</h2>\r\n\t\t\t\t\t\t\t<input className='form-control' type='button' onClick={this.hideSHowWin} value={\"Okay\"} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}