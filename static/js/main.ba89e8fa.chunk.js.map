{"version":3,"sources":["App.js","registerServiceWorker.js","index.js"],"names":["convertToNumber","map","i","j","dimensions","count","row","column","e","App","props","state","maxTunnels","maxLength","revealed","reset","currMap","win","lost","showWin","bombCounter","totalMoves","timer","timerStr","playing","timerStarted","onChange","bind","checkTiles","mapCheat","checkWin","hideSHowWin","startTimer","formatTime","changePreset","generateNew","num","array","push","target","name","value","this","setState","validator","setInterval","clearInterval","getSeconds","slice","minutes","Math","floor","getMinutes","getHours","x","input","Number","isNaN","alert","console","log","repeat","randomDirection","createArray","currentRow","random","currentColumn","directions","lastDirection","length","randomLength","ceil","tunnelLength","lose","col","up","document","getElementById","outerUp","className","innerHTML","style","backgroundColor","revealSurroundings","down","outerDown","left","outerLeft","right","outerRight","tile","insideTheTile","innerTile","border","createMap","resetTiles","chosen","allSafeRevealed","window","confirm","getAttribute","revealAll","id","outer","split","currentMove","forceUpdate","grid","iframes","getElementsByTagName","remove","type","min","max","onClick","obj","obj2","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ba89e8fa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\n// convert the map to a minesweeper map\r\nfunction convertToNumber(map, i, j, dimensions) {\r\n\tvar count = 0;\r\n\tvar row = dimensions;\r\n\tvar column = dimensions;\r\n\ttry {\r\n\t\tif (i > 0) {\r\n\t\t\tif (j > 0) {\r\n\t\t\t\tif (map[i - 1][j - 1] === \"💣\") count += 1;\r\n\t\t\t}\r\n\t\t\tif (map[i - 1][j] === \"💣\") {\r\n\t\t\t\tcount += 1;\r\n\t\t\t}\r\n\t\t\tif (j < column - 1) {\r\n\t\t\t\tif (map[i - 1][j + 1] === \"💣\") count += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (j > 0) {\r\n\t\t\tif (map[i][j - 1] === \"💣\") count += 1;\r\n\t\t}\r\n\t\tif (j < column - 1) {\r\n\t\t\tif (map[i][j + 1] === \"💣\") count += 1;\r\n\t\t}\r\n\t\tif (i < row - 1)\r\n\t\t\tif (j > 0) {\r\n\t\t\t\tif (map[i + 1][j - 1] === \"💣\") count += 1;\r\n\t\t\t}\r\n\t\tif (map[i + 1][j] === \"💣\") {\r\n\t\t\tcount += 1;\r\n\t\t}\r\n\t\tif (j < column - 1) {\r\n\t\t\tif (map[i + 1][j + 1] === \"💣\") count += 1;\r\n\t\t}\r\n\t} catch (e) {\r\n\t\t// ignored\r\n\t\t// console.log(e);\r\n\t} finally {\r\n\t\treturn count;\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdimensions: 9,\r\n\t\t\tmaxTunnels: 85,\r\n\t\t\tmaxLength: 45,\r\n\t\t\trevealed: false,\r\n\t\t\treset: true,\r\n\t\t\tcurrMap: [],\r\n\t\t\twin: false,\r\n\t\t\tlost: false,\r\n\t\t\tshowWin: false,\r\n\t\t\tbombCounter: 0,\r\n\t\t\ttotalMoves: 0,\r\n\t\t\ttimer: 0,\r\n\t\t\ttimerStr: \"00 : 00 : 00\",\r\n\t\t\tplaying: true,\r\n\t\t\ttimerStarted: false,\r\n\t\t};\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.checkTiles = this.checkTiles.bind(this);\r\n\t\tthis.mapCheat = this.mapCheat.bind(this);\r\n\t\tthis.checkWin = this.checkWin.bind(this);\r\n\t\tthis.hideSHowWin = this.hideSHowWin.bind(this);\r\n\t\tthis.startTimer = this.startTimer.bind(this);\r\n\t\tthis.formatTime = this.formatTime.bind(this);\r\n\t\tthis.changePreset = this.changePreset.bind(this);\r\n\t\tthis.generateNew = this.generateNew.bind(this);\r\n\t}\r\n\r\n\t// create array with number provided\r\n\tcreateArray(num, dimensions) {\r\n\t\tvar array = [];\r\n\t\tfor (var i = 0; i < dimensions; i++) {\r\n\t\t\tarray.push([]);\r\n\t\t\tfor (var j = 0; j < dimensions; j++) {\r\n\t\t\t\tarray[i].push(num);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn array;\r\n\t}\r\n\r\n\t// onchange for number inputs\r\n\tonChange(e) {\r\n\t\tif (e.target.name !== \"dimensions\") {\r\n\t\t\tif (e.target.value > 0 && e.target.value <= 1000) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t[e.target.name]: this.validator(e.target.value),\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tif (e.target.value < 1) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t[e.target.name]: 1,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t[e.target.name]: 1000,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (e.target.value > 2 && e.target.value <= 100) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t[e.target.name]: this.validator(e.target.value),\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tif (e.target.value < 3) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t[e.target.name]: 3,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t[e.target.name]: 100,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// timer\r\n\tstartTimer() {\r\n\t\tvar timer = setInterval(() => {\r\n\t\t\tif (!this.state.playing) {\r\n\t\t\t\tclearInterval(timer);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.setState({\r\n\t\t\t\ttimer: this.state.timer + 1,\r\n\t\t\t});\r\n\r\n\t\t\tthis.formatTime();\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\t// format for timer\r\n\tformatTime() {\r\n\t\tconst getSeconds = `0${this.state.timer % 60}`.slice(-2);\r\n\t\tconst minutes = `${Math.floor(this.state.timer / 60)}`;\r\n\t\tconst getMinutes = `0${minutes % 60}`.slice(-2);\r\n\t\tconst getHours = `0${Math.floor(this.state.timer / 3600)}`.slice(-2);\r\n\r\n\t\tthis.setState({\r\n\t\t\ttimerStr: `${getHours} : ${getMinutes} : ${getSeconds}`,\r\n\t\t});\r\n\t}\r\n\r\n\t// validator for number inputs\r\n\tvalidator(x) {\r\n\t\tlet input = Number(x);\r\n\t\tif (isNaN(input)) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn input;\r\n\t}\r\n\r\n\t// print the map to console\r\n\tmapCheat(e) {\r\n\t\talert(\"Map printed to console\");\r\n\t\tconsole.log(\"=\".repeat(25));\r\n\t\tconsole.log(\"Revealing the map...\");\r\n\t\tconsole.log(\"=\".repeat(25));\r\n\t\tconsole.log(this.state.currMap);\r\n\t}\r\n\r\n\t// create a randomly generated map\r\n\tcreateMap() {\r\n\t\tlet dimensions = this.state.dimensions, // width and height of the map\r\n\t\t\tmaxTunnels = this.state.maxTunnels, // max number of tunnels possible\r\n\t\t\tmaxLength = this.state.maxLength, // max length each tunnel can have\r\n\t\t\tmap = this.createArray(1, dimensions), // create a 2d array full of 1's\r\n\t\t\tcurrentRow = Math.floor(Math.random() * dimensions), // the current row - start at a random spot\r\n\t\t\tcurrentColumn = Math.floor(Math.random() * dimensions), // the current column - start at a random spot\r\n\t\t\tdirections = [\r\n\t\t\t\t[-1, 0],\r\n\t\t\t\t[1, 0],\r\n\t\t\t\t[0, -1],\r\n\t\t\t\t[0, 1],\r\n\t\t\t], // array to get a random direction from (left,right,up,down)\r\n\t\t\tlastDirection = [], // save the last direction it went\r\n\t\t\trandomDirection; // next turn/direction - holds a value from directions\r\n\r\n\t\t// lets create some tunnels - while maxTunnels, dimentions, and maxLength  is greater than 0.\r\n\t\twhile (maxTunnels && dimensions && maxLength) {\r\n\t\t\t// lets get a random direction - until it is a perpendicular to the lastDirection\r\n\t\t\t// if the last direction = left or right,\r\n\t\t\t// then the new direction has to be up or down,\r\n\t\t\t// and vice versa\r\n\t\t\tdo {\r\n\t\t\t\trandomDirection = directions[Math.floor(Math.random() * directions.length)];\r\n\t\t\t} while ((randomDirection[0] === -lastDirection[0] && randomDirection[1] === -lastDirection[1]) || (randomDirection[0] === lastDirection[0] && randomDirection[1] === lastDirection[1]));\r\n\r\n\t\t\tvar randomLength = Math.ceil(Math.random() * maxLength), //length the next tunnel will be (max of maxLength)\r\n\t\t\t\ttunnelLength = 0; //current length of tunnel being created\r\n\r\n\t\t\t// lets loop until tunnel is long enough or until it hit an edge\r\n\t\t\twhile (tunnelLength < randomLength) {\r\n\t\t\t\t//break the loop if it is going out of the map\r\n\t\t\t\tif (\r\n\t\t\t\t\t(currentRow === 0 && randomDirection[0] === -1) ||\r\n\t\t\t\t\t(currentColumn === 0 && randomDirection[1] === -1) ||\r\n\t\t\t\t\t(currentRow === dimensions - 1 && randomDirection[0] === 1) ||\r\n\t\t\t\t\t(currentColumn === dimensions - 1 && randomDirection[1] === 1)\r\n\t\t\t\t) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmap[currentRow][currentColumn] = 0; //set the value of the index in map to 0 (a tunnel, making it one longer)\r\n\t\t\t\t\tcurrentRow += randomDirection[0]; //add the value from randomDirection to row and col (-1, 0, or 1) to update the location\r\n\t\t\t\t\tcurrentColumn += randomDirection[1];\r\n\t\t\t\t\ttunnelLength++; //the tunnel is now one longer, so lets increment that variable\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tunnelLength) {\r\n\t\t\t\t// update the variables unless the last loop broke beforeit made any part of a tunnel\r\n\t\t\t\tlastDirection = randomDirection; //set lastDirection, so it can remember what way it went\r\n\t\t\t\tmaxTunnels--; // we created a whole tunnel so lets decrement how many we have left to create\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar bombCounter = 0; //counter for the number of bombs\r\n\t\t// based on the walls and tunnel, create a minesweeper map\r\n\t\tfor (var i = 0; i < dimensions; i++) {\r\n\t\t\tfor (var j = 0; j < dimensions; j++) {\r\n\t\t\t\tif (map[i][j] === 1) {\r\n\t\t\t\t\tmap[i][j] = \"💣\";\r\n\t\t\t\t\tbombCounter++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmap[i][j] = \"#\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// check surrounding tiles for mines, convert to numbers. # is a wall, * is a mine\r\n\t\tfor (i = 0; i < dimensions; i++) {\r\n\t\t\tfor (j = 0; j < dimensions; j++) {\r\n\t\t\t\tif (map[i][j] === \"💣\") {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmap[i][j] = convertToNumber(map, i, j, dimensions);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// if reset/create new map\r\n\t\tif (this.state.reset) {\r\n\t\t\t// if reset/on start\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrMap: map,\r\n\t\t\t\treset: false,\r\n\t\t\t\twin: false,\r\n\t\t\t\tlose: false,\r\n\t\t\t\tshowWin: false,\r\n\t\t\t\tbombCounter: bombCounter,\r\n\t\t\t\ttotalMoves: 0,\r\n\t\t\t\ttimer: 0,\r\n\t\t\t\ttimerStr: \"00 : 00 : 00\",\r\n\t\t\t\tplaying: true,\r\n\t\t\t\ttimerStarted: false,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// if not reset\r\n\t\t\tmap = this.state.currMap;\r\n\t\t}\r\n\r\n\t\treturn map; // all the tunnels have been created and the map is complete, so lets return it to render()\r\n\t}\r\n\r\n\t// Reveal surrounding tiles\r\n\trevealSurroundings(map, row, col) {\r\n\t\t// check row and col not out of bounds\r\n\t\tif (row < 0 || col < 0 || row >= this.state.dimensions || col >= this.state.dimensions) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// if the tile is a number, reveal it and all surrounding tiles\r\n\t\t// check above\r\n\t\ttry {\r\n\t\t\tif (map[row - 1][col] !== \"💣\") {\r\n\t\t\t\tvar up = document.getElementById(\"inner-\" + (row - 1) + \"-\" + col);\r\n\t\t\t\tvar outerUp = document.getElementById(row - 1 + \"-\" + col);\r\n\t\t\t\tif (up !== null) {\r\n\t\t\t\t\tup.className = \"revealed\";\r\n\t\t\t\t\tif (up.innerHTML === \"\") {\r\n\t\t\t\t\t\tif (outerUp.style.backgroundColor !== \"white\") {\r\n\t\t\t\t\t\t\t// outerUp.style.border = \"none\";\r\n\t\t\t\t\t\t\touterUp.style.backgroundColor = \"white\";\r\n\r\n\t\t\t\t\t\t\t// if empty then check for another empty tile\r\n\t\t\t\t\t\t\tthis.revealSurroundings(map, row - 1, col);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\touterUp.style.backgroundColor = \"#f6d852\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t/* Ignored */\r\n\t\t\t// console.log(\"up\" + e);\r\n\t\t}\r\n\r\n\t\t// check below\r\n\t\ttry {\r\n\t\t\tif (map[row + 1][col] !== \"💣\") {\r\n\t\t\t\tvar down = document.getElementById(\"inner-\" + (row + 1) + \"-\" + col);\r\n\t\t\t\tvar outerDown = document.getElementById(row + 1 + \"-\" + col);\r\n\t\t\t\tif (down !== null) {\r\n\t\t\t\t\tdown.className = \"revealed\";\r\n\t\t\t\t\tif (down.innerHTML === \"\") {\r\n\t\t\t\t\t\tif (outerDown.style.backgroundColor !== \"white\") {\r\n\t\t\t\t\t\t\t// outerDown.style.border = \"none\";\r\n\t\t\t\t\t\t\touterDown.style.backgroundColor = \"white\";\r\n\r\n\t\t\t\t\t\t\t// if empty then check for another empty tile\r\n\t\t\t\t\t\t\tthis.revealSurroundings(map, row + 1, col);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\touterDown.style.backgroundColor = \"#f6d852\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t/* Ignored */\r\n\t\t\t// console.log(\"bellow\" + e);\r\n\t\t}\r\n\r\n\t\t// check left\r\n\t\ttry {\r\n\t\t\tif (map[row][col - 1] !== \"💣\") {\r\n\t\t\t\tvar left = document.getElementById(\"inner-\" + row + \"-\" + (col - 1));\r\n\t\t\t\tvar outerLeft = document.getElementById(row + \"-\" + (col - 1));\r\n\t\t\t\tif (left !== null) {\r\n\t\t\t\t\tleft.className = \"revealed\";\r\n\t\t\t\t\tif (left.innerHTML === \"\") {\r\n\t\t\t\t\t\tif (outerLeft.style.backgroundColor !== \"white\") {\r\n\t\t\t\t\t\t\t// outerLeft.style.border = \"none\";\r\n\t\t\t\t\t\t\touterLeft.style.backgroundColor = \"white\";\r\n\r\n\t\t\t\t\t\t\t// if empty then check for another empty tile\r\n\t\t\t\t\t\t\tthis.revealSurroundings(map, row, col - 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\touterLeft.style.backgroundColor = \"#f6d852\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t/* Ignored */\r\n\t\t\t// console.log(\"left\" + e);\r\n\t\t}\r\n\r\n\t\t// check right\r\n\t\ttry {\r\n\t\t\tif (map[row][col + 1] !== \"💣\") {\r\n\t\t\t\tvar right = document.getElementById(\"inner-\" + row + \"-\" + (col + 1));\r\n\t\t\t\tvar outerRight = document.getElementById(row + \"-\" + (col + 1));\r\n\t\t\t\tif (right !== null) {\r\n\t\t\t\t\tright.className = \"revealed\";\r\n\t\t\t\t\tif (right.innerHTML === \"\") {\r\n\t\t\t\t\t\tif (outerRight.style.backgroundColor !== \"white\") {\r\n\t\t\t\t\t\t\t// outerRight.style.border = \"none\";\r\n\t\t\t\t\t\t\touterRight.style.backgroundColor = \"white\";\r\n\r\n\t\t\t\t\t\t\t// if empty then check for another empty tile\r\n\t\t\t\t\t\t\tthis.revealSurroundings(map, row, col + 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\touterRight.style.backgroundColor = \"#f6d852\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t/* Ignored */\r\n\t\t\t// console.log(\"right\" + e);\r\n\t\t}\r\n\t}\r\n\r\n\trevealAll() {\r\n\t\t// loop through all the elements and for the empty one change the style border and background color\r\n\t\tfor (var i = 0; i < this.state.dimensions; i++) {\r\n\t\t\tfor (var j = 0; j < this.state.dimensions; j++) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar tile = document.getElementById(i + \"-\" + j);\r\n\t\t\t\t\tvar insideTheTile = document.getElementById(\"inner-\" + i + \"-\" + j);\r\n\r\n\t\t\t\t\tif (insideTheTile.innerHTML === \"\") {\r\n\t\t\t\t\t\t// tile.style.border = \"none\";\r\n\t\t\t\t\t\ttile.style.backgroundColor = \"white\";\r\n\t\t\t\t\t} else if (insideTheTile.innerHTML !== \"💣\") {\r\n\t\t\t\t\t\ttile.style.backgroundColor = \"#f6d852\";\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t/* Ignored */\r\n\t\t\t\t\t// console.log(\"checkTiles\" + e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tresetTiles() {\r\n\t\t// loop through all the elements and for the empty one change the style border and background color\r\n\t\tfor (var i = 0; i < this.state.dimensions; i++) {\r\n\t\t\tfor (var j = 0; j < this.state.dimensions; j++) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar tile = document.getElementById(i + \"-\" + j);\r\n\t\t\t\t\tvar innerTile = document.getElementById(\"inner-\" + i + \"-\" + j);\r\n\r\n\t\t\t\t\ttile.style.border = \"\";\r\n\t\t\t\t\ttile.style.backgroundColor = \"\";\r\n\r\n\t\t\t\t\tinnerTile.className = \"hidden\";\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t/* Ignored */\r\n\t\t\t\t\t// console.log(\"checkTiles\" + e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgenerateNew() {\r\n\t\tthis.setState({\r\n\t\t\trevealed: false,\r\n\t\t\treset: true,\r\n\t\t\tmap: this.createMap(),\r\n\t\t\twin: false,\r\n\t\t\tlost: false,\r\n\t\t});\r\n\t\tthis.resetTiles();\r\n\t}\r\n\r\n\tchangePreset(e) {\r\n\t\tconsole.log(e.target.value);\r\n\t\tvar chosen = e.target.value;\r\n\t\tif (chosen === \"Easy\") {\r\n\t\t\tthis.setState({\r\n\t\t\t\tdimensions: 9,\r\n\t\t\t\tmaxTunnels: 85,\r\n\t\t\t\tmaxLength: 45,\r\n\t\t\t});\r\n\t\t} else if (chosen === \"Medium\") {\r\n\t\t\tthis.setState({\r\n\t\t\t\tdimensions: 16,\r\n\t\t\t\tmaxTunnels: 120,\r\n\t\t\t\tmaxLength: 60,\r\n\t\t\t});\r\n\t\t} else if (chosen === \"Hard\") {\r\n\t\t\tthis.setState({\r\n\t\t\t\tdimensions: 22,\r\n\t\t\t\tmaxTunnels: 200,\r\n\t\t\t\tmaxLength: 100,\r\n\t\t\t});\r\n\t\t} else if (chosen === \"Very Hard\") {\r\n\t\t\tthis.setState({\r\n\t\t\t\tdimensions: 28,\r\n\t\t\t\tmaxTunnels: 220,\r\n\t\t\t\tmaxLength: 130,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcheckWin() {\r\n\t\tvar allSafeRevealed = true;\r\n\t\tfor (var i = 0; i < this.state.dimensions; i++) {\r\n\t\t\tfor (var j = 0; j < this.state.dimensions; j++) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar innerTile = document.getElementById(\"inner-\" + i + \"-\" + j);\r\n\r\n\t\t\t\t\tif (innerTile.innerHTML !== \"💣\") {\r\n\t\t\t\t\t\tif (innerTile.className === \"hidden\") {\r\n\t\t\t\t\t\t\tallSafeRevealed = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t/* Ignored */\r\n\t\t\t\t\t// console.log(\"checkTiles\" + e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (allSafeRevealed) {\r\n\t\t\tthis.setState({\r\n\t\t\t\twin: true,\r\n\t\t\t\tshowWin: true,\r\n\t\t\t\trevealed: true,\r\n\t\t\t\tplaying: false,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\twin: false,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\thideSHowWin() {\r\n\t\tthis.setState({\r\n\t\t\tshowWin: false,\r\n\t\t});\r\n\t}\r\n\r\n\tcheckTiles(e) {\r\n\t\t// check win or not\r\n\t\tif (this.state.win) {\r\n\t\t\tif (window.confirm(\"You have won the game! Would you like to reset?\")) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\trevealed: false,\r\n\t\t\t\t\tmap: this.createMap(),\r\n\t\t\t\t\treset: true,\r\n\t\t\t\t\twin: false,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.resetTiles();\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// check lost or not\r\n\t\tif (this.state.lost) {\r\n\t\t\tif (window.confirm(\"You have lost the game! Would you like to reset?\")) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\trevealed: false,\r\n\t\t\t\t\tmap: this.createMap(),\r\n\t\t\t\t\treset: true,\r\n\t\t\t\t\tlost: false,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.resetTiles();\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!this.state.timerStarted) {\r\n\t\t\tthis.setState({\r\n\t\t\t\ttimerStarted: true,\r\n\t\t\t});\r\n\t\t\tthis.startTimer();\r\n\t\t}\r\n\r\n\t\tif (this.state.win === false) {\r\n\t\t\t// onclick, check if mine or not. if mine tell user lost\r\n\t\t\tif (e.target.getAttribute(\"data-tiletype\") === \"mines\") {\r\n\t\t\t\tconsole.log(\"You lost!\");\r\n\r\n\t\t\t\talert(\"You step on a mine. You lost!\");\r\n\r\n\t\t\t\tthis.revealAll();\r\n\r\n\t\t\t\t// reveal the map\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\trevealed: true,\r\n\t\t\t\t\treset: false,\r\n\t\t\t\t\tlost: true,\r\n\t\t\t\t\tplaying: false,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tvar innerTile = document.getElementById(\"inner-\" + e.target.id);\r\n\r\n\t\t\t\tif (innerTile !== null) {\r\n\t\t\t\t\tif (innerTile.className !== \"revealed\") {\r\n\t\t\t\t\t\tinnerTile.className = \"revealed\";\r\n\r\n\t\t\t\t\t\tvar outer = document.getElementById(e.target.id);\r\n\t\t\t\t\t\t// check empty content\r\n\t\t\t\t\t\tif (innerTile.innerHTML === \"\") {\r\n\t\t\t\t\t\t\t// outer.style.border = \"none\";\r\n\t\t\t\t\t\t\touter.style.backgroundColor = \"white\";\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\touter.style.backgroundColor = \"#f6d852\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// id is row-col\r\n\t\t\t\t\t\t// separate it\r\n\t\t\t\t\t\tvar row = e.target.id.split(\"-\")[0];\r\n\t\t\t\t\t\tvar col = e.target.id.split(\"-\")[1];\r\n\t\t\t\t\t\tthis.revealSurroundings(this.state.currMap, row, col);\r\n\r\n\t\t\t\t\t\tvar currentMove = this.state.totalMoves;\r\n\t\t\t\t\t\tcurrentMove++;\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\ttotalMoves: currentMove,\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tthis.forceUpdate();\r\n\r\n\t\t\t\t\t\tthis.checkWin();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet grid = this.createMap();\r\n\r\n\t\t// remove all iframe, because for some reaso an iframe like to shows up sometimes.\r\n\t\tvar iframes = document.getElementsByTagName(\"iframe\");\r\n\t\tfor (var i = 0; i < iframes.length; i++) {\r\n\t\t\tiframes[i].remove();\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className='form-group row text-center'>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>dimensions</label>\r\n\t\t\t\t\t\t<input className='form-control' name='dimensions' type='number' min='1' max='1000' value={this.state.dimensions} onChange={this.onChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>maxTunnels</label>\r\n\t\t\t\t\t\t<input className='form-control' name='maxTunnels' type='number' min='1' max='1000' value={this.state.maxTunnels} onChange={this.onChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>maxLength</label>\r\n\t\t\t\t\t\t<input className='form-control' name='maxLength' type='number' min='1' max='1000' value={this.state.maxLength} onChange={this.onChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>Preset</label>\r\n\t\t\t\t\t\t<select className='form-control' name='preset' onChange={this.changePreset}>\r\n\t\t\t\t\t\t\t<option value='Easy'>Easy (9x9)</option>\r\n\t\t\t\t\t\t\t<option value='Medium'>Medium (16x16)</option>\r\n\t\t\t\t\t\t\t<option value='Hard'>Hard (22x22)</option>\r\n\t\t\t\t\t\t\t<option value='Very Hard'>Very Hard (28x28)</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>Generate</label>\r\n\t\t\t\t\t\t<input className='form-control' type='button' onClick={this.generateNew} value={\"Regenerate\"} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<table className='grid'>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t{grid.map((obj, row) => (\r\n\t\t\t\t\t\t\t<tr key={row}>\r\n\t\t\t\t\t\t\t\t{obj.map((obj2, col) => (\r\n\t\t\t\t\t\t\t\t\t<td className={this.state.revealed ? \"cell-reveal\" : \"cell-hidden\"} id={row + \"-\" + col} key={col} data-tiletype={obj2 === \"💣\" ? \"mines\" : \"notmines\"} onClick={this.checkTiles}>\r\n\t\t\t\t\t\t\t\t\t\t<span id={\"inner-\" + row + \"-\" + col} className={this.state.revealed ? \"revealed\" : \"hidden\"} data-tiletype={obj2 === \"💣\" ? \"mines\" : \"notmines\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* className={this.state.revealed ? \"revealed\" : \"hidden\"} */}\r\n\t\t\t\t\t\t\t\t\t\t\t{obj2 === \"💣\" ? \"💣\" : obj2 === 0 ? \"\" : obj2}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t</table>\r\n\t\t\t\t<div className='form-group row text-center'>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>Status</label>\r\n\t\t\t\t\t\t<input className='form-control default-cursor' type='button' value={this.state.win ? \"Win\" : this.state.lost ? \"Lost\" : \"Playing\"} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>Bomb</label>\r\n\t\t\t\t\t\t<input className='form-control default-cursor' type='button' value={this.state.bombCounter} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>Moves</label>\r\n\t\t\t\t\t\t<input className='form-control default-cursor' type='button' value={this.state.totalMoves} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>Time</label>\r\n\t\t\t\t\t\t<input className='form-control default-cursor' type='button' value={this.state.timerStr} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='inline'>\r\n\t\t\t\t\t\t<label>Cheat</label>\r\n\t\t\t\t\t\t<input className='form-control' name='cheat' type='button' onClick={this.mapCheat} value={\"Show\"} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={this.state.showWin ? \"block\" : \"hidden\"} id='win-popup'>\r\n\t\t\t\t\t<div className='popup'>\r\n\t\t\t\t\t\t<div className='popup-content'>\r\n\t\t\t\t\t\t\t<h2>Congratulations! You Won the game!</h2>\r\n\t\t\t\t\t\t\t<input className='form-control' type='button' onClick={this.hideSHowWin} value={\"Okay\"} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}